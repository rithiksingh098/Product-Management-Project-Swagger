swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /products:
    x-swagger-router-controller: hello_world
    post:
      summary: Add a new product to the store
      description: ''
      operationId: addProduct
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: product object
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '405':
          description: Invalid input
    get:
      description: Returns the array of product objects with these params
      # used as the method name of the controller
      operationId: getproductsbymultiid
      parameters:
        - in: query
          name: category
          description: The name of the category whose products to get
          required: false
          type: string
        - in: query
          name: subcategory
          description: The name of the subcategory whose products to get
          required: false
          type: string
        - in: query
          name: tag
          description: The name of the tag whose products to get
          required: false
          type: string
        - in: query
          name: color
          description: The name of the color whose products to get
          required: false
          type: string
        - in: query
          name: brand
          description: The name of the brand whose products to get
          required: false
          type: string
        - in: query
          name: status
          description: The name of the category whose products to get
          required: false
          type: string
          enum:
          - available
          - draft
          - sold
      responses:
        "400":
          description: "Invalid ids supplied"
        "404":
          description: "Product not found"
        "200":
          description: Success
          schema:
              $ref: "#/definitions/SucessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: Delete products to the store
      description: Returns message response
      operationId: dekproductsbymultiid
      parameters:
        - in: query
          name: category
          description: The name of the category whose products to get
          required: false
          type: string
        - in: query
          name: subcategory
          description: The name of the subcategory whose products to get
          required: false
          type: string
        - in: query
          name: tag
          description: The name of the tag whose products to get
          required: false
          type: string
        - in: query
          name: color
          description: The name of the color whose products to get
          required: false
          type: string
        - in: query
          name: brand
          description: The name of the brand whose products to get
          required: false
          type: string
      responses:
        "400":
          description: "Invalid ids supplied"
        "404":
          description: "Product not found"
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /products/{sku}:
    x-swagger-router-controller: hello_world
    get:
      operationId: getproductsbysku
      parameters:
        - in: path
          name: sku
          required: true
          type: string
          description: The sku
        
      # used as the method name of the controller
      responses:
        "400":
          description: "Invalid sku supplied"
        "404":
          description: "Product not found"
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      summary: "to update the product by sku "
      operationId: putproductsbysku
      parameters:
        - in: path
          name: sku
          required: true
          type: string
          description: The sku
      responses:
        "400":
          description: "Invalid sku supplied"
        "404":
          description: "Product not found"
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: "to delete the product by sku "
      operationId: deleteproductsbysku
      parameters:
        - in: path
          name: sku
          required: true
          type: string
          description: The sku
      responses:
        "400":
          description: "Invalid sku supplied"
        "404":
          description: "Product not found"
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SucessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /categories:
    x-swagger-router-controller: hello_world
    post:
      summary: add a new category
      parameters:
        - in: body
          name: body
          description: product object
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '405':
          description: Invalid input
        200:
          description: OK
    get:
      summary: ""
      description: gives the category with the name
      parameters:
        - in: query
          name: category
          description: The name of the category whose products to get
          required: false
          type: string
      responses:
        "400":
          description: "Invalid ids supplied"
        "404":
          description: "category not found"
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Category"  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  SucessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Category:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      taxpercent:
        type: integer
  SubCategory:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  Color:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  Brand:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  Product:
    type: object
    required:
      - name
      - photoUrls
    properties:
      name:
        type: string
      SKU:
        type: string
      brand:
        type: array
        items:
          $ref: '#/definitions/Brand'
      price:
        type: integer
      color:
        type: array
        items:
          $ref: '#/definitions/Color'
      category:
        type: array
        items:
          $ref: '#/definitions/Category'
      subcategory:
        type: array
        items:
          $ref: '#/definitions/SubCategory'
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      photoUrls:
        type: array
        items:
          type: string
      status:
        type: string
        description: product status in the store
        enum:
          - available
          - draft
          - sold
      mode:
        type: string
        description: mode of product to sell
        enum:
          - physical
          - digital
  
